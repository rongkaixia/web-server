/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.echo.AuthType', null, global);
goog.exportSymbol('proto.com.echo.LoginType', null, global);
goog.exportSymbol('proto.com.echo.Message', null, global);
goog.exportSymbol('proto.com.echo.MsgType', null, global);
goog.exportSymbol('proto.com.echo.Request', null, global);
goog.exportSymbol('proto.com.echo.Request.AddUserAddressRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.AuthenticationRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.DeleteUserAddressRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.LoginRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.LogoutRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.QueryUserInfoRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.SignupRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.UpdateUserAddressRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.UpdateUserInfoRequest', null, global);
goog.exportSymbol('proto.com.echo.Request.UpdateUserInfoRequest.UpdateData', null, global);
goog.exportSymbol('proto.com.echo.Response', null, global);
goog.exportSymbol('proto.com.echo.Response.AddUserAddressResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.AuthenticationResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.DeleteUserAddressResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.LoginResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.LogoutResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.QueryUserInfoResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.SignupResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.UpdateUserAddressResponse', null, global);
goog.exportSymbol('proto.com.echo.Response.UpdateUserInfoResponse', null, global);
goog.exportSymbol('proto.com.echo.ResultCode', null, global);
goog.exportSymbol('proto.com.echo.SecurityQuestionPair', null, global);
goog.exportSymbol('proto.com.echo.UserAddress', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.UserAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.UserAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.UserAddress.displayName = 'proto.com.echo.UserAddress';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.UserAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.UserAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.UserAddress} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.UserAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    recipientsName: msg.getRecipientsName(),
    recipientsPhone: msg.getRecipientsPhone(),
    recipientsAddress: msg.getRecipientsAddress(),
    recipientsPostcode: msg.getRecipientsPostcode()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.UserAddress}
 */
proto.com.echo.UserAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.UserAddress;
  return proto.com.echo.UserAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.UserAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.UserAddress}
 */
proto.com.echo.UserAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsPhone(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.UserAddress} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.UserAddress.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.UserAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.UserAddress.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getRecipientsName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getRecipientsPhone();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getRecipientsAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getRecipientsPostcode();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.UserAddress} The clone.
 */
proto.com.echo.UserAddress.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.UserAddress} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.echo.UserAddress.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.UserAddress.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string recipients_name = 2;
 * @return {string}
 */
proto.com.echo.UserAddress.prototype.getRecipientsName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.UserAddress.prototype.setRecipientsName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string recipients_phone = 3;
 * @return {string}
 */
proto.com.echo.UserAddress.prototype.getRecipientsPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.echo.UserAddress.prototype.setRecipientsPhone = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string recipients_address = 4;
 * @return {string}
 */
proto.com.echo.UserAddress.prototype.getRecipientsAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.echo.UserAddress.prototype.setRecipientsAddress = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string recipients_postcode = 5;
 * @return {string}
 */
proto.com.echo.UserAddress.prototype.getRecipientsPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.echo.UserAddress.prototype.setRecipientsPostcode = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.SecurityQuestionPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.SecurityQuestionPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.SecurityQuestionPair.displayName = 'proto.com.echo.SecurityQuestionPair';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.SecurityQuestionPair.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.SecurityQuestionPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.SecurityQuestionPair} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.SecurityQuestionPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: msg.getQuestion(),
    answer: msg.getAnswer()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.SecurityQuestionPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.SecurityQuestionPair;
  return proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.SecurityQuestionPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.SecurityQuestionPair} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.SecurityQuestionPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.SecurityQuestionPair.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getQuestion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.SecurityQuestionPair} The clone.
 */
proto.com.echo.SecurityQuestionPair.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.SecurityQuestionPair} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string question = 1;
 * @return {string}
 */
proto.com.echo.SecurityQuestionPair.prototype.getQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.SecurityQuestionPair.prototype.setQuestion = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string answer = 2;
 * @return {string}
 */
proto.com.echo.SecurityQuestionPair.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.SecurityQuestionPair.prototype.setAnswer = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.echo.Request.oneofGroups_);
};
goog.inherits(proto.com.echo.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.displayName = 'proto.com.echo.Request';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.echo.Request.oneofGroups_ = [[1001,1002,1003,1004,1005,1006,1100,1101,1102]];

/**
 * @enum {number}
 */
proto.com.echo.Request.ContentCase = {
  CONTENT_NOT_SET: 0,
  SIGNUP_REQUEST: 1001,
  LOGIN_REQUEST: 1002,
  AUTHENTICATION_REQUEST: 1003,
  LOGOUT_REQUEST: 1004,
  QUERY_USER_INFO_REQUEST: 1005,
  UPDATE_USER_INFO_REQUEST: 1006,
  ADD_USER_ADDRESS_REQUEST: 1100,
  UPDATE_USER_ADDRESS_REQUEST: 1101,
  DELETE_USER_ADDRESS_REQUEST: 1102
};

/**
 * @return {proto.com.echo.Request.ContentCase}
 */
proto.com.echo.Request.prototype.getContentCase = function() {
  return /** @type {proto.com.echo.Request.ContentCase} */(jspb.Message.computeOneofCase(this, proto.com.echo.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    signupRequest: (f = msg.getSignupRequest()) && proto.com.echo.Request.SignupRequest.toObject(includeInstance, f),
    loginRequest: (f = msg.getLoginRequest()) && proto.com.echo.Request.LoginRequest.toObject(includeInstance, f),
    authenticationRequest: (f = msg.getAuthenticationRequest()) && proto.com.echo.Request.AuthenticationRequest.toObject(includeInstance, f),
    logoutRequest: (f = msg.getLogoutRequest()) && proto.com.echo.Request.LogoutRequest.toObject(includeInstance, f),
    queryUserInfoRequest: (f = msg.getQueryUserInfoRequest()) && proto.com.echo.Request.QueryUserInfoRequest.toObject(includeInstance, f),
    updateUserInfoRequest: (f = msg.getUpdateUserInfoRequest()) && proto.com.echo.Request.UpdateUserInfoRequest.toObject(includeInstance, f),
    addUserAddressRequest: (f = msg.getAddUserAddressRequest()) && proto.com.echo.Request.AddUserAddressRequest.toObject(includeInstance, f),
    updateUserAddressRequest: (f = msg.getUpdateUserAddressRequest()) && proto.com.echo.Request.UpdateUserAddressRequest.toObject(includeInstance, f),
    deleteUserAddressRequest: (f = msg.getDeleteUserAddressRequest()) && proto.com.echo.Request.DeleteUserAddressRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request}
 */
proto.com.echo.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request;
  return proto.com.echo.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request}
 */
proto.com.echo.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1001:
      var value = new proto.com.echo.Request.SignupRequest;
      reader.readMessage(value,proto.com.echo.Request.SignupRequest.deserializeBinaryFromReader);
      msg.setSignupRequest(value);
      break;
    case 1002:
      var value = new proto.com.echo.Request.LoginRequest;
      reader.readMessage(value,proto.com.echo.Request.LoginRequest.deserializeBinaryFromReader);
      msg.setLoginRequest(value);
      break;
    case 1003:
      var value = new proto.com.echo.Request.AuthenticationRequest;
      reader.readMessage(value,proto.com.echo.Request.AuthenticationRequest.deserializeBinaryFromReader);
      msg.setAuthenticationRequest(value);
      break;
    case 1004:
      var value = new proto.com.echo.Request.LogoutRequest;
      reader.readMessage(value,proto.com.echo.Request.LogoutRequest.deserializeBinaryFromReader);
      msg.setLogoutRequest(value);
      break;
    case 1005:
      var value = new proto.com.echo.Request.QueryUserInfoRequest;
      reader.readMessage(value,proto.com.echo.Request.QueryUserInfoRequest.deserializeBinaryFromReader);
      msg.setQueryUserInfoRequest(value);
      break;
    case 1006:
      var value = new proto.com.echo.Request.UpdateUserInfoRequest;
      reader.readMessage(value,proto.com.echo.Request.UpdateUserInfoRequest.deserializeBinaryFromReader);
      msg.setUpdateUserInfoRequest(value);
      break;
    case 1100:
      var value = new proto.com.echo.Request.AddUserAddressRequest;
      reader.readMessage(value,proto.com.echo.Request.AddUserAddressRequest.deserializeBinaryFromReader);
      msg.setAddUserAddressRequest(value);
      break;
    case 1101:
      var value = new proto.com.echo.Request.UpdateUserAddressRequest;
      reader.readMessage(value,proto.com.echo.Request.UpdateUserAddressRequest.deserializeBinaryFromReader);
      msg.setUpdateUserAddressRequest(value);
      break;
    case 1102:
      var value = new proto.com.echo.Request.DeleteUserAddressRequest;
      reader.readMessage(value,proto.com.echo.Request.DeleteUserAddressRequest.deserializeBinaryFromReader);
      msg.setDeleteUserAddressRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSignupRequest();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.com.echo.Request.SignupRequest.serializeBinaryToWriter
    );
  }
  f = this.getLoginRequest();
  if (f != null) {
    writer.writeMessage(
      1002,
      f,
      proto.com.echo.Request.LoginRequest.serializeBinaryToWriter
    );
  }
  f = this.getAuthenticationRequest();
  if (f != null) {
    writer.writeMessage(
      1003,
      f,
      proto.com.echo.Request.AuthenticationRequest.serializeBinaryToWriter
    );
  }
  f = this.getLogoutRequest();
  if (f != null) {
    writer.writeMessage(
      1004,
      f,
      proto.com.echo.Request.LogoutRequest.serializeBinaryToWriter
    );
  }
  f = this.getQueryUserInfoRequest();
  if (f != null) {
    writer.writeMessage(
      1005,
      f,
      proto.com.echo.Request.QueryUserInfoRequest.serializeBinaryToWriter
    );
  }
  f = this.getUpdateUserInfoRequest();
  if (f != null) {
    writer.writeMessage(
      1006,
      f,
      proto.com.echo.Request.UpdateUserInfoRequest.serializeBinaryToWriter
    );
  }
  f = this.getAddUserAddressRequest();
  if (f != null) {
    writer.writeMessage(
      1100,
      f,
      proto.com.echo.Request.AddUserAddressRequest.serializeBinaryToWriter
    );
  }
  f = this.getUpdateUserAddressRequest();
  if (f != null) {
    writer.writeMessage(
      1101,
      f,
      proto.com.echo.Request.UpdateUserAddressRequest.serializeBinaryToWriter
    );
  }
  f = this.getDeleteUserAddressRequest();
  if (f != null) {
    writer.writeMessage(
      1102,
      f,
      proto.com.echo.Request.DeleteUserAddressRequest.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request} The clone.
 */
proto.com.echo.Request.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional SignupRequest signup_request = 1001;
 * @return {proto.com.echo.Request.SignupRequest}
 */
proto.com.echo.Request.prototype.getSignupRequest = function() {
  return /** @type{proto.com.echo.Request.SignupRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.SignupRequest, 1001));
};


/** @param {proto.com.echo.Request.SignupRequest|undefined} value  */
proto.com.echo.Request.prototype.setSignupRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1001, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearSignupRequest = function() {
  this.setSignupRequest(undefined);
};


/**
 * optional LoginRequest login_request = 1002;
 * @return {proto.com.echo.Request.LoginRequest}
 */
proto.com.echo.Request.prototype.getLoginRequest = function() {
  return /** @type{proto.com.echo.Request.LoginRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.LoginRequest, 1002));
};


/** @param {proto.com.echo.Request.LoginRequest|undefined} value  */
proto.com.echo.Request.prototype.setLoginRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1002, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearLoginRequest = function() {
  this.setLoginRequest(undefined);
};


/**
 * optional AuthenticationRequest authentication_request = 1003;
 * @return {proto.com.echo.Request.AuthenticationRequest}
 */
proto.com.echo.Request.prototype.getAuthenticationRequest = function() {
  return /** @type{proto.com.echo.Request.AuthenticationRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.AuthenticationRequest, 1003));
};


/** @param {proto.com.echo.Request.AuthenticationRequest|undefined} value  */
proto.com.echo.Request.prototype.setAuthenticationRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1003, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearAuthenticationRequest = function() {
  this.setAuthenticationRequest(undefined);
};


/**
 * optional LogoutRequest logout_request = 1004;
 * @return {proto.com.echo.Request.LogoutRequest}
 */
proto.com.echo.Request.prototype.getLogoutRequest = function() {
  return /** @type{proto.com.echo.Request.LogoutRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.LogoutRequest, 1004));
};


/** @param {proto.com.echo.Request.LogoutRequest|undefined} value  */
proto.com.echo.Request.prototype.setLogoutRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1004, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearLogoutRequest = function() {
  this.setLogoutRequest(undefined);
};


/**
 * optional QueryUserInfoRequest query_user_info_request = 1005;
 * @return {proto.com.echo.Request.QueryUserInfoRequest}
 */
proto.com.echo.Request.prototype.getQueryUserInfoRequest = function() {
  return /** @type{proto.com.echo.Request.QueryUserInfoRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.QueryUserInfoRequest, 1005));
};


/** @param {proto.com.echo.Request.QueryUserInfoRequest|undefined} value  */
proto.com.echo.Request.prototype.setQueryUserInfoRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1005, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearQueryUserInfoRequest = function() {
  this.setQueryUserInfoRequest(undefined);
};


/**
 * optional UpdateUserInfoRequest update_user_info_request = 1006;
 * @return {proto.com.echo.Request.UpdateUserInfoRequest}
 */
proto.com.echo.Request.prototype.getUpdateUserInfoRequest = function() {
  return /** @type{proto.com.echo.Request.UpdateUserInfoRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.UpdateUserInfoRequest, 1006));
};


/** @param {proto.com.echo.Request.UpdateUserInfoRequest|undefined} value  */
proto.com.echo.Request.prototype.setUpdateUserInfoRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1006, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearUpdateUserInfoRequest = function() {
  this.setUpdateUserInfoRequest(undefined);
};


/**
 * optional AddUserAddressRequest add_user_address_request = 1100;
 * @return {proto.com.echo.Request.AddUserAddressRequest}
 */
proto.com.echo.Request.prototype.getAddUserAddressRequest = function() {
  return /** @type{proto.com.echo.Request.AddUserAddressRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.AddUserAddressRequest, 1100));
};


/** @param {proto.com.echo.Request.AddUserAddressRequest|undefined} value  */
proto.com.echo.Request.prototype.setAddUserAddressRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1100, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearAddUserAddressRequest = function() {
  this.setAddUserAddressRequest(undefined);
};


/**
 * optional UpdateUserAddressRequest update_user_address_request = 1101;
 * @return {proto.com.echo.Request.UpdateUserAddressRequest}
 */
proto.com.echo.Request.prototype.getUpdateUserAddressRequest = function() {
  return /** @type{proto.com.echo.Request.UpdateUserAddressRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.UpdateUserAddressRequest, 1101));
};


/** @param {proto.com.echo.Request.UpdateUserAddressRequest|undefined} value  */
proto.com.echo.Request.prototype.setUpdateUserAddressRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1101, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearUpdateUserAddressRequest = function() {
  this.setUpdateUserAddressRequest(undefined);
};


/**
 * optional DeleteUserAddressRequest delete_user_address_request = 1102;
 * @return {proto.com.echo.Request.DeleteUserAddressRequest}
 */
proto.com.echo.Request.prototype.getDeleteUserAddressRequest = function() {
  return /** @type{proto.com.echo.Request.DeleteUserAddressRequest} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request.DeleteUserAddressRequest, 1102));
};


/** @param {proto.com.echo.Request.DeleteUserAddressRequest|undefined} value  */
proto.com.echo.Request.prototype.setDeleteUserAddressRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1102, proto.com.echo.Request.oneofGroups_[0], value);
};


proto.com.echo.Request.prototype.clearDeleteUserAddressRequest = function() {
  this.setDeleteUserAddressRequest(undefined);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.SignupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.SignupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.SignupRequest.displayName = 'proto.com.echo.Request.SignupRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.SignupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.SignupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.SignupRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.SignupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phonenum: msg.getPhonenum(),
    password: msg.getPassword()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.SignupRequest}
 */
proto.com.echo.Request.SignupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.SignupRequest;
  return proto.com.echo.Request.SignupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.SignupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.SignupRequest}
 */
proto.com.echo.Request.SignupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.SignupRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.SignupRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.SignupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.SignupRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPhonenum();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.SignupRequest} The clone.
 */
proto.com.echo.Request.SignupRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.SignupRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string phonenum = 1;
 * @return {string}
 */
proto.com.echo.Request.SignupRequest.prototype.getPhonenum = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.SignupRequest.prototype.setPhonenum = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.com.echo.Request.SignupRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.Request.SignupRequest.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.echo.Request.LoginRequest.oneofGroups_);
};
goog.inherits(proto.com.echo.Request.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.LoginRequest.displayName = 'proto.com.echo.Request.LoginRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.echo.Request.LoginRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.com.echo.Request.LoginRequest.NameCase = {
  NAME_NOT_SET: 0,
  PHONENUM: 1,
  EMAIL: 2
};

/**
 * @return {proto.com.echo.Request.LoginRequest.NameCase}
 */
proto.com.echo.Request.LoginRequest.prototype.getNameCase = function() {
  return /** @type {proto.com.echo.Request.LoginRequest.NameCase} */(jspb.Message.computeOneofCase(this, proto.com.echo.Request.LoginRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phonenum: jspb.Message.getField(msg, 1),
    email: jspb.Message.getField(msg, 2),
    password: msg.getPassword()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.LoginRequest}
 */
proto.com.echo.Request.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.LoginRequest;
  return proto.com.echo.Request.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.LoginRequest}
 */
proto.com.echo.Request.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.LoginRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getPhonenum();
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getEmail();
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getPassword();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.LoginRequest} The clone.
 */
proto.com.echo.Request.LoginRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.LoginRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string phonenum = 1;
 * @return {string?}
 */
proto.com.echo.Request.LoginRequest.prototype.getPhonenum = function() {
  return /** @type {string?} */ (jspb.Message.getField(this, 1));
};


/** @param {string?|undefined} value  */
proto.com.echo.Request.LoginRequest.prototype.setPhonenum = function(value) {
  jspb.Message.setOneofField(this, 1, proto.com.echo.Request.LoginRequest.oneofGroups_[0], value);
};


proto.com.echo.Request.LoginRequest.prototype.clearPhonenum = function() {
  jspb.Message.setOneofField(this, 1, proto.com.echo.Request.LoginRequest.oneofGroups_[0], undefined);
};


/**
 * optional string email = 2;
 * @return {string?}
 */
proto.com.echo.Request.LoginRequest.prototype.getEmail = function() {
  return /** @type {string?} */ (jspb.Message.getField(this, 2));
};


/** @param {string?|undefined} value  */
proto.com.echo.Request.LoginRequest.prototype.setEmail = function(value) {
  jspb.Message.setOneofField(this, 2, proto.com.echo.Request.LoginRequest.oneofGroups_[0], value);
};


proto.com.echo.Request.LoginRequest.prototype.clearEmail = function() {
  jspb.Message.setOneofField(this, 2, proto.com.echo.Request.LoginRequest.oneofGroups_[0], undefined);
};


/**
 * optional string password = 10;
 * @return {string}
 */
proto.com.echo.Request.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.com.echo.Request.LoginRequest.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.AuthenticationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.AuthenticationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.AuthenticationRequest.displayName = 'proto.com.echo.Request.AuthenticationRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.AuthenticationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.AuthenticationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.AuthenticationRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.AuthenticationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.AuthenticationRequest}
 */
proto.com.echo.Request.AuthenticationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.AuthenticationRequest;
  return proto.com.echo.Request.AuthenticationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.AuthenticationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.AuthenticationRequest}
 */
proto.com.echo.Request.AuthenticationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.AuthenticationRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.AuthenticationRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.AuthenticationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.AuthenticationRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.AuthenticationRequest} The clone.
 */
proto.com.echo.Request.AuthenticationRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.AuthenticationRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.AuthenticationRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.AuthenticationRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.LogoutRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.LogoutRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.LogoutRequest.displayName = 'proto.com.echo.Request.LogoutRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.LogoutRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.LogoutRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.LogoutRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.LogoutRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.LogoutRequest}
 */
proto.com.echo.Request.LogoutRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.LogoutRequest;
  return proto.com.echo.Request.LogoutRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.LogoutRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.LogoutRequest}
 */
proto.com.echo.Request.LogoutRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.LogoutRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.LogoutRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.LogoutRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.LogoutRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.LogoutRequest} The clone.
 */
proto.com.echo.Request.LogoutRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.LogoutRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.LogoutRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.LogoutRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.QueryUserInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.QueryUserInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.QueryUserInfoRequest.displayName = 'proto.com.echo.Request.QueryUserInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.QueryUserInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.QueryUserInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.QueryUserInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken(),
    queryUserId: msg.getQueryUserId(),
    queryUsername: msg.getQueryUsername(),
    queryEmail: msg.getQueryEmail(),
    queryPhonenum: msg.getQueryPhonenum(),
    querySecurityQuestions: msg.getQuerySecurityQuestions(),
    queryAddresses: msg.getQueryAddresses()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.QueryUserInfoRequest}
 */
proto.com.echo.Request.QueryUserInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.QueryUserInfoRequest;
  return proto.com.echo.Request.QueryUserInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.QueryUserInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.QueryUserInfoRequest}
 */
proto.com.echo.Request.QueryUserInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQueryUserId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQueryUsername(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQueryEmail(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQueryPhonenum(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQuerySecurityQuestions(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQueryAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.QueryUserInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.QueryUserInfoRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getQueryUserId();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = this.getQueryUsername();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getQueryEmail();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = this.getQueryPhonenum();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = this.getQuerySecurityQuestions();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = this.getQueryAddresses();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.QueryUserInfoRequest} The clone.
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.QueryUserInfoRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool query_user_id = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getQueryUserId = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setQueryUserId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool query_username = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getQueryUsername = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setQueryUsername = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool query_email = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getQueryEmail = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 4, false));
};


/** @param {boolean} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setQueryEmail = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional bool query_phonenum = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getQueryPhonenum = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 5, false));
};


/** @param {boolean} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setQueryPhonenum = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional bool query_security_questions = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getQuerySecurityQuestions = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 6, false));
};


/** @param {boolean} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setQuerySecurityQuestions = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool query_addresses = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Request.QueryUserInfoRequest.prototype.getQueryAddresses = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 7, false));
};


/** @param {boolean} value  */
proto.com.echo.Request.QueryUserInfoRequest.prototype.setQueryAddresses = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.UpdateUserInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.echo.Request.UpdateUserInfoRequest.repeatedFields_, null);
};
goog.inherits(proto.com.echo.Request.UpdateUserInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.UpdateUserInfoRequest.displayName = 'proto.com.echo.Request.UpdateUserInfoRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.echo.Request.UpdateUserInfoRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.UpdateUserInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.UpdateUserInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.UpdateUserInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken(),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.UpdateUserInfoRequest}
 */
proto.com.echo.Request.UpdateUserInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.UpdateUserInfoRequest;
  return proto.com.echo.Request.UpdateUserInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.UpdateUserInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.UpdateUserInfoRequest}
 */
proto.com.echo.Request.UpdateUserInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.com.echo.Request.UpdateUserInfoRequest.UpdateData;
      reader.readMessage(value,proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.deserializeBinaryFromReader);
      msg.getDataList().push(value);
      msg.setDataList(msg.getDataList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.UpdateUserInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.UpdateUserInfoRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.UpdateUserInfoRequest} The clone.
 */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.UpdateUserInfoRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated UpdateData data = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData>}
 */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.getDataList = function() {
  return /** @type{!Array.<!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData, 2));
};


/** @param {Array.<!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData>|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.com.echo.Request.UpdateUserInfoRequest.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_);
};
goog.inherits(proto.com.echo.Request.UpdateUserInfoRequest.UpdateData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.displayName = 'proto.com.echo.Request.UpdateUserInfoRequest.UpdateData';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_ = [[1,2,3,4,5,6,7]];

/**
 * @enum {number}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.ValueCase = {
  VALUE_NOT_SET: 0,
  USERNAME: 1,
  PASSWORD: 2,
  EMAIL: 3,
  PHONENUM: 4,
  SECURITY_QUESTION1: 5,
  SECURITY_QUESTION2: 6,
  SECURITY_QUESTION3: 7
};

/**
 * @return {proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.ValueCase}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getValueCase = function() {
  return /** @type {proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.ValueCase} */(jspb.Message.computeOneofCase(this, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.toObject = function(includeInstance, msg) {
  var f, obj = {
    username: jspb.Message.getField(msg, 1),
    password: jspb.Message.getField(msg, 2),
    email: jspb.Message.getField(msg, 3),
    phonenum: jspb.Message.getField(msg, 4),
    securityQuestion1: (f = msg.getSecurityQuestion1()) && proto.com.echo.SecurityQuestionPair.toObject(includeInstance, f),
    securityQuestion2: (f = msg.getSecurityQuestion2()) && proto.com.echo.SecurityQuestionPair.toObject(includeInstance, f),
    securityQuestion3: (f = msg.getSecurityQuestion3()) && proto.com.echo.SecurityQuestionPair.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.UpdateUserInfoRequest.UpdateData;
  return proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenum(value);
      break;
    case 5:
      var value = new proto.com.echo.SecurityQuestionPair;
      reader.readMessage(value,proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader);
      msg.setSecurityQuestion1(value);
      break;
    case 6:
      var value = new proto.com.echo.SecurityQuestionPair;
      reader.readMessage(value,proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader);
      msg.setSecurityQuestion2(value);
      break;
    case 7:
      var value = new proto.com.echo.SecurityQuestionPair;
      reader.readMessage(value,proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader);
      msg.setSecurityQuestion3(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUsername();
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPassword();
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getEmail();
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getPhonenum();
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getSecurityQuestion1();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter
    );
  }
  f = this.getSecurityQuestion2();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter
    );
  }
  f = this.getSecurityQuestion3();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData} The clone.
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.UpdateUserInfoRequest.UpdateData} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string username = 1;
 * @return {string?}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getUsername = function() {
  return /** @type {string?} */ (jspb.Message.getField(this, 1));
};


/** @param {string?|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setUsername = function(value) {
  jspb.Message.setOneofField(this, 1, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearUsername = function() {
  jspb.Message.setOneofField(this, 1, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], undefined);
};


/**
 * optional string password = 2;
 * @return {string?}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getPassword = function() {
  return /** @type {string?} */ (jspb.Message.getField(this, 2));
};


/** @param {string?|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setPassword = function(value) {
  jspb.Message.setOneofField(this, 2, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearPassword = function() {
  jspb.Message.setOneofField(this, 2, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], undefined);
};


/**
 * optional string email = 3;
 * @return {string?}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getEmail = function() {
  return /** @type {string?} */ (jspb.Message.getField(this, 3));
};


/** @param {string?|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setEmail = function(value) {
  jspb.Message.setOneofField(this, 3, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearEmail = function() {
  jspb.Message.setOneofField(this, 3, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], undefined);
};


/**
 * optional string phonenum = 4;
 * @return {string?}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getPhonenum = function() {
  return /** @type {string?} */ (jspb.Message.getField(this, 4));
};


/** @param {string?|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setPhonenum = function(value) {
  jspb.Message.setOneofField(this, 4, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearPhonenum = function() {
  jspb.Message.setOneofField(this, 4, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], undefined);
};


/**
 * optional SecurityQuestionPair security_question1 = 5;
 * @return {proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getSecurityQuestion1 = function() {
  return /** @type{proto.com.echo.SecurityQuestionPair} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.SecurityQuestionPair, 5));
};


/** @param {proto.com.echo.SecurityQuestionPair|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setSecurityQuestion1 = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearSecurityQuestion1 = function() {
  this.setSecurityQuestion1(undefined);
};


/**
 * optional SecurityQuestionPair security_question2 = 6;
 * @return {proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getSecurityQuestion2 = function() {
  return /** @type{proto.com.echo.SecurityQuestionPair} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.SecurityQuestionPair, 6));
};


/** @param {proto.com.echo.SecurityQuestionPair|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setSecurityQuestion2 = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearSecurityQuestion2 = function() {
  this.setSecurityQuestion2(undefined);
};


/**
 * optional SecurityQuestionPair security_question3 = 7;
 * @return {proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.getSecurityQuestion3 = function() {
  return /** @type{proto.com.echo.SecurityQuestionPair} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.SecurityQuestionPair, 7));
};


/** @param {proto.com.echo.SecurityQuestionPair|undefined} value  */
proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.setSecurityQuestion3 = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.oneofGroups_[0], value);
};


proto.com.echo.Request.UpdateUserInfoRequest.UpdateData.prototype.clearSecurityQuestion3 = function() {
  this.setSecurityQuestion3(undefined);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.AddUserAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.AddUserAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.AddUserAddressRequest.displayName = 'proto.com.echo.Request.AddUserAddressRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.AddUserAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.AddUserAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.AddUserAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken(),
    recipientsName: msg.getRecipientsName(),
    recipientsPhone: msg.getRecipientsPhone(),
    recipientsAddress: msg.getRecipientsAddress(),
    recipientsPostcode: msg.getRecipientsPostcode()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.AddUserAddressRequest}
 */
proto.com.echo.Request.AddUserAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.AddUserAddressRequest;
  return proto.com.echo.Request.AddUserAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.AddUserAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.AddUserAddressRequest}
 */
proto.com.echo.Request.AddUserAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.AddUserAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.AddUserAddressRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getRecipientsName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getRecipientsPhone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getRecipientsAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getRecipientsPostcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.AddUserAddressRequest} The clone.
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.AddUserAddressRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.AddUserAddressRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string recipients_name = 3;
 * @return {string}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.getRecipientsName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.echo.Request.AddUserAddressRequest.prototype.setRecipientsName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string recipients_phone = 4;
 * @return {string}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.getRecipientsPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.echo.Request.AddUserAddressRequest.prototype.setRecipientsPhone = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string recipients_address = 5;
 * @return {string}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.getRecipientsAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.echo.Request.AddUserAddressRequest.prototype.setRecipientsAddress = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string recipients_postcode = 6;
 * @return {string}
 */
proto.com.echo.Request.AddUserAddressRequest.prototype.getRecipientsPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.com.echo.Request.AddUserAddressRequest.prototype.setRecipientsPostcode = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.UpdateUserAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.UpdateUserAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.UpdateUserAddressRequest.displayName = 'proto.com.echo.Request.UpdateUserAddressRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.UpdateUserAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.UpdateUserAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.UpdateUserAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken(),
    id: msg.getId(),
    recipientsName: msg.getRecipientsName(),
    recipientsPhone: msg.getRecipientsPhone(),
    recipientsAddress: msg.getRecipientsAddress(),
    recipientsPostcode: msg.getRecipientsPostcode()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.UpdateUserAddressRequest}
 */
proto.com.echo.Request.UpdateUserAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.UpdateUserAddressRequest;
  return proto.com.echo.Request.UpdateUserAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.UpdateUserAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.UpdateUserAddressRequest}
 */
proto.com.echo.Request.UpdateUserAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsAddress(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientsPostcode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.UpdateUserAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.UpdateUserAddressRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getRecipientsName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getRecipientsPhone();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getRecipientsAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getRecipientsPostcode();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.UpdateUserAddressRequest} The clone.
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.UpdateUserAddressRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string recipients_name = 3;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.getRecipientsName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.setRecipientsName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string recipients_phone = 4;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.getRecipientsPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.setRecipientsPhone = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string recipients_address = 5;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.getRecipientsAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.setRecipientsAddress = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string recipients_postcode = 6;
 * @return {string}
 */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.getRecipientsPostcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.com.echo.Request.UpdateUserAddressRequest.prototype.setRecipientsPostcode = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Request.DeleteUserAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Request.DeleteUserAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Request.DeleteUserAddressRequest.displayName = 'proto.com.echo.Request.DeleteUserAddressRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Request.DeleteUserAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Request.DeleteUserAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Request.DeleteUserAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken(),
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Request.DeleteUserAddressRequest}
 */
proto.com.echo.Request.DeleteUserAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Request.DeleteUserAddressRequest;
  return proto.com.echo.Request.DeleteUserAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Request.DeleteUserAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Request.DeleteUserAddressRequest}
 */
proto.com.echo.Request.DeleteUserAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Request.DeleteUserAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.DeleteUserAddressRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Request.DeleteUserAddressRequest} The clone.
 */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Request.DeleteUserAddressRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.Request.DeleteUserAddressRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.echo.Response.oneofGroups_);
};
goog.inherits(proto.com.echo.Response, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.displayName = 'proto.com.echo.Response';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.echo.Response.oneofGroups_ = [[1001,1002,1003,1004,1005,1006,1100,1101,1102]];

/**
 * @enum {number}
 */
proto.com.echo.Response.ContentCase = {
  CONTENT_NOT_SET: 0,
  SIGNUP_RESPONSE: 1001,
  LOGIN_RESPONSE: 1002,
  AUTHENTICATION_RESPONSE: 1003,
  LOGOUT_RESPONSE: 1004,
  QUERY_USER_INFO_RESPONSE: 1005,
  UPDATE_USER_INFO_RESPONSE: 1006,
  ADD_USER_ADDRESS_REPONSE: 1100,
  UPDATE_USER_ADDRESS_REPONSE: 1101,
  DELETE_USER_ADDRESS_REPONSE: 1102
};

/**
 * @return {proto.com.echo.Response.ContentCase}
 */
proto.com.echo.Response.prototype.getContentCase = function() {
  return /** @type {proto.com.echo.Response.ContentCase} */(jspb.Message.computeOneofCase(this, proto.com.echo.Response.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: msg.getResult(),
    errorDescription: msg.getErrorDescription(),
    signupResponse: (f = msg.getSignupResponse()) && proto.com.echo.Response.SignupResponse.toObject(includeInstance, f),
    loginResponse: (f = msg.getLoginResponse()) && proto.com.echo.Response.LoginResponse.toObject(includeInstance, f),
    authenticationResponse: (f = msg.getAuthenticationResponse()) && proto.com.echo.Response.AuthenticationResponse.toObject(includeInstance, f),
    logoutResponse: (f = msg.getLogoutResponse()) && proto.com.echo.Response.LogoutResponse.toObject(includeInstance, f),
    queryUserInfoResponse: (f = msg.getQueryUserInfoResponse()) && proto.com.echo.Response.QueryUserInfoResponse.toObject(includeInstance, f),
    updateUserInfoResponse: (f = msg.getUpdateUserInfoResponse()) && proto.com.echo.Response.UpdateUserInfoResponse.toObject(includeInstance, f),
    addUserAddressReponse: (f = msg.getAddUserAddressReponse()) && proto.com.echo.Response.AddUserAddressResponse.toObject(includeInstance, f),
    updateUserAddressReponse: (f = msg.getUpdateUserAddressReponse()) && proto.com.echo.Response.UpdateUserAddressResponse.toObject(includeInstance, f),
    deleteUserAddressReponse: (f = msg.getDeleteUserAddressReponse()) && proto.com.echo.Response.DeleteUserAddressResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response}
 */
proto.com.echo.Response.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response;
  return proto.com.echo.Response.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response}
 */
proto.com.echo.Response.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.echo.ResultCode} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorDescription(value);
      break;
    case 1001:
      var value = new proto.com.echo.Response.SignupResponse;
      reader.readMessage(value,proto.com.echo.Response.SignupResponse.deserializeBinaryFromReader);
      msg.setSignupResponse(value);
      break;
    case 1002:
      var value = new proto.com.echo.Response.LoginResponse;
      reader.readMessage(value,proto.com.echo.Response.LoginResponse.deserializeBinaryFromReader);
      msg.setLoginResponse(value);
      break;
    case 1003:
      var value = new proto.com.echo.Response.AuthenticationResponse;
      reader.readMessage(value,proto.com.echo.Response.AuthenticationResponse.deserializeBinaryFromReader);
      msg.setAuthenticationResponse(value);
      break;
    case 1004:
      var value = new proto.com.echo.Response.LogoutResponse;
      reader.readMessage(value,proto.com.echo.Response.LogoutResponse.deserializeBinaryFromReader);
      msg.setLogoutResponse(value);
      break;
    case 1005:
      var value = new proto.com.echo.Response.QueryUserInfoResponse;
      reader.readMessage(value,proto.com.echo.Response.QueryUserInfoResponse.deserializeBinaryFromReader);
      msg.setQueryUserInfoResponse(value);
      break;
    case 1006:
      var value = new proto.com.echo.Response.UpdateUserInfoResponse;
      reader.readMessage(value,proto.com.echo.Response.UpdateUserInfoResponse.deserializeBinaryFromReader);
      msg.setUpdateUserInfoResponse(value);
      break;
    case 1100:
      var value = new proto.com.echo.Response.AddUserAddressResponse;
      reader.readMessage(value,proto.com.echo.Response.AddUserAddressResponse.deserializeBinaryFromReader);
      msg.setAddUserAddressReponse(value);
      break;
    case 1101:
      var value = new proto.com.echo.Response.UpdateUserAddressResponse;
      reader.readMessage(value,proto.com.echo.Response.UpdateUserAddressResponse.deserializeBinaryFromReader);
      msg.setUpdateUserAddressReponse(value);
      break;
    case 1102:
      var value = new proto.com.echo.Response.DeleteUserAddressResponse;
      reader.readMessage(value,proto.com.echo.Response.DeleteUserAddressResponse.deserializeBinaryFromReader);
      msg.setDeleteUserAddressReponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getErrorDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getSignupResponse();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.com.echo.Response.SignupResponse.serializeBinaryToWriter
    );
  }
  f = this.getLoginResponse();
  if (f != null) {
    writer.writeMessage(
      1002,
      f,
      proto.com.echo.Response.LoginResponse.serializeBinaryToWriter
    );
  }
  f = this.getAuthenticationResponse();
  if (f != null) {
    writer.writeMessage(
      1003,
      f,
      proto.com.echo.Response.AuthenticationResponse.serializeBinaryToWriter
    );
  }
  f = this.getLogoutResponse();
  if (f != null) {
    writer.writeMessage(
      1004,
      f,
      proto.com.echo.Response.LogoutResponse.serializeBinaryToWriter
    );
  }
  f = this.getQueryUserInfoResponse();
  if (f != null) {
    writer.writeMessage(
      1005,
      f,
      proto.com.echo.Response.QueryUserInfoResponse.serializeBinaryToWriter
    );
  }
  f = this.getUpdateUserInfoResponse();
  if (f != null) {
    writer.writeMessage(
      1006,
      f,
      proto.com.echo.Response.UpdateUserInfoResponse.serializeBinaryToWriter
    );
  }
  f = this.getAddUserAddressReponse();
  if (f != null) {
    writer.writeMessage(
      1100,
      f,
      proto.com.echo.Response.AddUserAddressResponse.serializeBinaryToWriter
    );
  }
  f = this.getUpdateUserAddressReponse();
  if (f != null) {
    writer.writeMessage(
      1101,
      f,
      proto.com.echo.Response.UpdateUserAddressResponse.serializeBinaryToWriter
    );
  }
  f = this.getDeleteUserAddressReponse();
  if (f != null) {
    writer.writeMessage(
      1102,
      f,
      proto.com.echo.Response.DeleteUserAddressResponse.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response} The clone.
 */
proto.com.echo.Response.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional ResultCode result = 1;
 * @return {!proto.com.echo.ResultCode}
 */
proto.com.echo.Response.prototype.getResult = function() {
  return /** @type {!proto.com.echo.ResultCode} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.echo.ResultCode} value  */
proto.com.echo.Response.prototype.setResult = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string error_description = 2;
 * @return {string}
 */
proto.com.echo.Response.prototype.getErrorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.Response.prototype.setErrorDescription = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional SignupResponse signup_response = 1001;
 * @return {proto.com.echo.Response.SignupResponse}
 */
proto.com.echo.Response.prototype.getSignupResponse = function() {
  return /** @type{proto.com.echo.Response.SignupResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.SignupResponse, 1001));
};


/** @param {proto.com.echo.Response.SignupResponse|undefined} value  */
proto.com.echo.Response.prototype.setSignupResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1001, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearSignupResponse = function() {
  this.setSignupResponse(undefined);
};


/**
 * optional LoginResponse login_response = 1002;
 * @return {proto.com.echo.Response.LoginResponse}
 */
proto.com.echo.Response.prototype.getLoginResponse = function() {
  return /** @type{proto.com.echo.Response.LoginResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.LoginResponse, 1002));
};


/** @param {proto.com.echo.Response.LoginResponse|undefined} value  */
proto.com.echo.Response.prototype.setLoginResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1002, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearLoginResponse = function() {
  this.setLoginResponse(undefined);
};


/**
 * optional AuthenticationResponse authentication_response = 1003;
 * @return {proto.com.echo.Response.AuthenticationResponse}
 */
proto.com.echo.Response.prototype.getAuthenticationResponse = function() {
  return /** @type{proto.com.echo.Response.AuthenticationResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.AuthenticationResponse, 1003));
};


/** @param {proto.com.echo.Response.AuthenticationResponse|undefined} value  */
proto.com.echo.Response.prototype.setAuthenticationResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1003, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearAuthenticationResponse = function() {
  this.setAuthenticationResponse(undefined);
};


/**
 * optional LogoutResponse logout_response = 1004;
 * @return {proto.com.echo.Response.LogoutResponse}
 */
proto.com.echo.Response.prototype.getLogoutResponse = function() {
  return /** @type{proto.com.echo.Response.LogoutResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.LogoutResponse, 1004));
};


/** @param {proto.com.echo.Response.LogoutResponse|undefined} value  */
proto.com.echo.Response.prototype.setLogoutResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1004, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearLogoutResponse = function() {
  this.setLogoutResponse(undefined);
};


/**
 * optional QueryUserInfoResponse query_user_info_response = 1005;
 * @return {proto.com.echo.Response.QueryUserInfoResponse}
 */
proto.com.echo.Response.prototype.getQueryUserInfoResponse = function() {
  return /** @type{proto.com.echo.Response.QueryUserInfoResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.QueryUserInfoResponse, 1005));
};


/** @param {proto.com.echo.Response.QueryUserInfoResponse|undefined} value  */
proto.com.echo.Response.prototype.setQueryUserInfoResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1005, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearQueryUserInfoResponse = function() {
  this.setQueryUserInfoResponse(undefined);
};


/**
 * optional UpdateUserInfoResponse update_user_info_response = 1006;
 * @return {proto.com.echo.Response.UpdateUserInfoResponse}
 */
proto.com.echo.Response.prototype.getUpdateUserInfoResponse = function() {
  return /** @type{proto.com.echo.Response.UpdateUserInfoResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.UpdateUserInfoResponse, 1006));
};


/** @param {proto.com.echo.Response.UpdateUserInfoResponse|undefined} value  */
proto.com.echo.Response.prototype.setUpdateUserInfoResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1006, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearUpdateUserInfoResponse = function() {
  this.setUpdateUserInfoResponse(undefined);
};


/**
 * optional AddUserAddressResponse add_user_address_reponse = 1100;
 * @return {proto.com.echo.Response.AddUserAddressResponse}
 */
proto.com.echo.Response.prototype.getAddUserAddressReponse = function() {
  return /** @type{proto.com.echo.Response.AddUserAddressResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.AddUserAddressResponse, 1100));
};


/** @param {proto.com.echo.Response.AddUserAddressResponse|undefined} value  */
proto.com.echo.Response.prototype.setAddUserAddressReponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1100, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearAddUserAddressReponse = function() {
  this.setAddUserAddressReponse(undefined);
};


/**
 * optional UpdateUserAddressResponse update_user_address_reponse = 1101;
 * @return {proto.com.echo.Response.UpdateUserAddressResponse}
 */
proto.com.echo.Response.prototype.getUpdateUserAddressReponse = function() {
  return /** @type{proto.com.echo.Response.UpdateUserAddressResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.UpdateUserAddressResponse, 1101));
};


/** @param {proto.com.echo.Response.UpdateUserAddressResponse|undefined} value  */
proto.com.echo.Response.prototype.setUpdateUserAddressReponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1101, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearUpdateUserAddressReponse = function() {
  this.setUpdateUserAddressReponse(undefined);
};


/**
 * optional DeleteUserAddressResponse delete_user_address_reponse = 1102;
 * @return {proto.com.echo.Response.DeleteUserAddressResponse}
 */
proto.com.echo.Response.prototype.getDeleteUserAddressReponse = function() {
  return /** @type{proto.com.echo.Response.DeleteUserAddressResponse} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response.DeleteUserAddressResponse, 1102));
};


/** @param {proto.com.echo.Response.DeleteUserAddressResponse|undefined} value  */
proto.com.echo.Response.prototype.setDeleteUserAddressReponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1102, proto.com.echo.Response.oneofGroups_[0], value);
};


proto.com.echo.Response.prototype.clearDeleteUserAddressReponse = function() {
  this.setDeleteUserAddressReponse(undefined);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.SignupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.SignupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.SignupResponse.displayName = 'proto.com.echo.Response.SignupResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.SignupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.SignupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.SignupResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.SignupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.SignupResponse}
 */
proto.com.echo.Response.SignupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.SignupResponse;
  return proto.com.echo.Response.SignupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.SignupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.SignupResponse}
 */
proto.com.echo.Response.SignupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.SignupResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.SignupResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.SignupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.SignupResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.SignupResponse} The clone.
 */
proto.com.echo.Response.SignupResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.SignupResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.LoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.LoginResponse.displayName = 'proto.com.echo.Response.LoginResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.LoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.LoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.LoginResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.LoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: msg.getToken(),
    expiresIn: msg.getExpiresIn(),
    userId: msg.getUserId(),
    username: msg.getUsername()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.LoginResponse}
 */
proto.com.echo.Response.LoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.LoginResponse;
  return proto.com.echo.Response.LoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.LoginResponse}
 */
proto.com.echo.Response.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpiresIn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.LoginResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.LoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.LoginResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getExpiresIn();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.LoginResponse} The clone.
 */
proto.com.echo.Response.LoginResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.LoginResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string token = 2;
 * @return {string}
 */
proto.com.echo.Response.LoginResponse.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.Response.LoginResponse.prototype.setToken = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 expires_in = 3;
 * @return {number}
 */
proto.com.echo.Response.LoginResponse.prototype.getExpiresIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.echo.Response.LoginResponse.prototype.setExpiresIn = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.com.echo.Response.LoginResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.echo.Response.LoginResponse.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.com.echo.Response.LoginResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.echo.Response.LoginResponse.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.AuthenticationResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.AuthenticationResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.AuthenticationResponse.displayName = 'proto.com.echo.Response.AuthenticationResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.AuthenticationResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.AuthenticationResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.AuthenticationResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.AuthenticationResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isExpired: msg.getIsExpired(),
    expiresIn: msg.getExpiresIn(),
    userId: msg.getUserId(),
    username: msg.getUsername()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.AuthenticationResponse}
 */
proto.com.echo.Response.AuthenticationResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.AuthenticationResponse;
  return proto.com.echo.Response.AuthenticationResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.AuthenticationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.AuthenticationResponse}
 */
proto.com.echo.Response.AuthenticationResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsExpired(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpiresIn(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.AuthenticationResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.AuthenticationResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.AuthenticationResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.AuthenticationResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIsExpired();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = this.getExpiresIn();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getUsername();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.AuthenticationResponse} The clone.
 */
proto.com.echo.Response.AuthenticationResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.AuthenticationResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool is_expired = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.echo.Response.AuthenticationResponse.prototype.getIsExpired = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.com.echo.Response.AuthenticationResponse.prototype.setIsExpired = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 expires_in = 3;
 * @return {number}
 */
proto.com.echo.Response.AuthenticationResponse.prototype.getExpiresIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.com.echo.Response.AuthenticationResponse.prototype.setExpiresIn = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.com.echo.Response.AuthenticationResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.echo.Response.AuthenticationResponse.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string username = 5;
 * @return {string}
 */
proto.com.echo.Response.AuthenticationResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.echo.Response.AuthenticationResponse.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.LogoutResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.LogoutResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.LogoutResponse.displayName = 'proto.com.echo.Response.LogoutResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.LogoutResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.LogoutResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.LogoutResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.LogoutResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.LogoutResponse}
 */
proto.com.echo.Response.LogoutResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.LogoutResponse;
  return proto.com.echo.Response.LogoutResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.LogoutResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.LogoutResponse}
 */
proto.com.echo.Response.LogoutResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.LogoutResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.LogoutResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.LogoutResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.LogoutResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.LogoutResponse} The clone.
 */
proto.com.echo.Response.LogoutResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.LogoutResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.QueryUserInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.echo.Response.QueryUserInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.com.echo.Response.QueryUserInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.QueryUserInfoResponse.displayName = 'proto.com.echo.Response.QueryUserInfoResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.echo.Response.QueryUserInfoResponse.repeatedFields_ = [20];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.QueryUserInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.QueryUserInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.QueryUserInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: msg.getUserId(),
    username: msg.getUsername(),
    email: msg.getEmail(),
    phonenum: msg.getPhonenum(),
    securityQuestion1: (f = msg.getSecurityQuestion1()) && proto.com.echo.SecurityQuestionPair.toObject(includeInstance, f),
    securityQuestion2: (f = msg.getSecurityQuestion2()) && proto.com.echo.SecurityQuestionPair.toObject(includeInstance, f),
    securityQuestion3: (f = msg.getSecurityQuestion3()) && proto.com.echo.SecurityQuestionPair.toObject(includeInstance, f),
    addressarrayList: jspb.Message.toObjectList(msg.getAddressarrayList(),
    proto.com.echo.UserAddress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.QueryUserInfoResponse}
 */
proto.com.echo.Response.QueryUserInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.QueryUserInfoResponse;
  return proto.com.echo.Response.QueryUserInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.QueryUserInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.QueryUserInfoResponse}
 */
proto.com.echo.Response.QueryUserInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhonenum(value);
      break;
    case 6:
      var value = new proto.com.echo.SecurityQuestionPair;
      reader.readMessage(value,proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader);
      msg.setSecurityQuestion1(value);
      break;
    case 7:
      var value = new proto.com.echo.SecurityQuestionPair;
      reader.readMessage(value,proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader);
      msg.setSecurityQuestion2(value);
      break;
    case 8:
      var value = new proto.com.echo.SecurityQuestionPair;
      reader.readMessage(value,proto.com.echo.SecurityQuestionPair.deserializeBinaryFromReader);
      msg.setSecurityQuestion3(value);
      break;
    case 20:
      var value = new proto.com.echo.UserAddress;
      reader.readMessage(value,proto.com.echo.UserAddress.deserializeBinaryFromReader);
      msg.getAddressarrayList().push(value);
      msg.setAddressarrayList(msg.getAddressarrayList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.QueryUserInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.QueryUserInfoResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getPhonenum();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getSecurityQuestion1();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter
    );
  }
  f = this.getSecurityQuestion2();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter
    );
  }
  f = this.getSecurityQuestion3();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.com.echo.SecurityQuestionPair.serializeBinaryToWriter
    );
  }
  f = this.getAddressarrayList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.com.echo.UserAddress.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.QueryUserInfoResponse} The clone.
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.QueryUserInfoResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setUserId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string phonenum = 5;
 * @return {string}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getPhonenum = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setPhonenum = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional SecurityQuestionPair security_question1 = 6;
 * @return {proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getSecurityQuestion1 = function() {
  return /** @type{proto.com.echo.SecurityQuestionPair} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.SecurityQuestionPair, 6));
};


/** @param {proto.com.echo.SecurityQuestionPair|undefined} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setSecurityQuestion1 = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.com.echo.Response.QueryUserInfoResponse.prototype.clearSecurityQuestion1 = function() {
  this.setSecurityQuestion1(undefined);
};


/**
 * optional SecurityQuestionPair security_question2 = 7;
 * @return {proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getSecurityQuestion2 = function() {
  return /** @type{proto.com.echo.SecurityQuestionPair} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.SecurityQuestionPair, 7));
};


/** @param {proto.com.echo.SecurityQuestionPair|undefined} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setSecurityQuestion2 = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.com.echo.Response.QueryUserInfoResponse.prototype.clearSecurityQuestion2 = function() {
  this.setSecurityQuestion2(undefined);
};


/**
 * optional SecurityQuestionPair security_question3 = 8;
 * @return {proto.com.echo.SecurityQuestionPair}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getSecurityQuestion3 = function() {
  return /** @type{proto.com.echo.SecurityQuestionPair} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.SecurityQuestionPair, 8));
};


/** @param {proto.com.echo.SecurityQuestionPair|undefined} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setSecurityQuestion3 = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.com.echo.Response.QueryUserInfoResponse.prototype.clearSecurityQuestion3 = function() {
  this.setSecurityQuestion3(undefined);
};


/**
 * repeated UserAddress addressArray = 20;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.com.echo.UserAddress>}
 */
proto.com.echo.Response.QueryUserInfoResponse.prototype.getAddressarrayList = function() {
  return /** @type{!Array.<!proto.com.echo.UserAddress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.echo.UserAddress, 20));
};


/** @param {Array.<!proto.com.echo.UserAddress>|undefined} value  */
proto.com.echo.Response.QueryUserInfoResponse.prototype.setAddressarrayList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 20, value);
};


proto.com.echo.Response.QueryUserInfoResponse.prototype.clearAddressarrayList = function() {
  this.setAddressarrayList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.UpdateUserInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.UpdateUserInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.UpdateUserInfoResponse.displayName = 'proto.com.echo.Response.UpdateUserInfoResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.UpdateUserInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.UpdateUserInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.UpdateUserInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.UpdateUserInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.UpdateUserInfoResponse}
 */
proto.com.echo.Response.UpdateUserInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.UpdateUserInfoResponse;
  return proto.com.echo.Response.UpdateUserInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.UpdateUserInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.UpdateUserInfoResponse}
 */
proto.com.echo.Response.UpdateUserInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.UpdateUserInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.UpdateUserInfoResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.UpdateUserInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.UpdateUserInfoResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.UpdateUserInfoResponse} The clone.
 */
proto.com.echo.Response.UpdateUserInfoResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.UpdateUserInfoResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.AddUserAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.AddUserAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.AddUserAddressResponse.displayName = 'proto.com.echo.Response.AddUserAddressResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.AddUserAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.AddUserAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.AddUserAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.AddUserAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.AddUserAddressResponse}
 */
proto.com.echo.Response.AddUserAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.AddUserAddressResponse;
  return proto.com.echo.Response.AddUserAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.AddUserAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.AddUserAddressResponse}
 */
proto.com.echo.Response.AddUserAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.AddUserAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.AddUserAddressResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.AddUserAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.AddUserAddressResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.AddUserAddressResponse} The clone.
 */
proto.com.echo.Response.AddUserAddressResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.AddUserAddressResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.UpdateUserAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.UpdateUserAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.UpdateUserAddressResponse.displayName = 'proto.com.echo.Response.UpdateUserAddressResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.UpdateUserAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.UpdateUserAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.UpdateUserAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.UpdateUserAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.UpdateUserAddressResponse}
 */
proto.com.echo.Response.UpdateUserAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.UpdateUserAddressResponse;
  return proto.com.echo.Response.UpdateUserAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.UpdateUserAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.UpdateUserAddressResponse}
 */
proto.com.echo.Response.UpdateUserAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.UpdateUserAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.UpdateUserAddressResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.UpdateUserAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.UpdateUserAddressResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.UpdateUserAddressResponse} The clone.
 */
proto.com.echo.Response.UpdateUserAddressResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.UpdateUserAddressResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Response.DeleteUserAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.echo.Response.DeleteUserAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Response.DeleteUserAddressResponse.displayName = 'proto.com.echo.Response.DeleteUserAddressResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Response.DeleteUserAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Response.DeleteUserAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Response.DeleteUserAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Response.DeleteUserAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Response.DeleteUserAddressResponse}
 */
proto.com.echo.Response.DeleteUserAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Response.DeleteUserAddressResponse;
  return proto.com.echo.Response.DeleteUserAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Response.DeleteUserAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Response.DeleteUserAddressResponse}
 */
proto.com.echo.Response.DeleteUserAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Response.DeleteUserAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.DeleteUserAddressResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Response.DeleteUserAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Response.DeleteUserAddressResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Response.DeleteUserAddressResponse} The clone.
 */
proto.com.echo.Response.DeleteUserAddressResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Response.DeleteUserAddressResponse} */ (jspb.Message.cloneMessage(this));
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.echo.Message = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.com.echo.Message.oneofGroups_);
};
goog.inherits(proto.com.echo.Message, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.echo.Message.displayName = 'proto.com.echo.Message';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.com.echo.Message.oneofGroups_ = [[1001,1002]];

/**
 * @enum {number}
 */
proto.com.echo.Message.BodyCase = {
  BODY_NOT_SET: 0,
  REQUEST: 1001,
  RESPONSE: 1002
};

/**
 * @return {proto.com.echo.Message.BodyCase}
 */
proto.com.echo.Message.prototype.getBodyCase = function() {
  return /** @type {proto.com.echo.Message.BodyCase} */(jspb.Message.computeOneofCase(this, proto.com.echo.Message.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.echo.Message.prototype.toObject = function(opt_includeInstance) {
  return proto.com.echo.Message.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.echo.Message} msg The msg instance to transform.
 * @return {!Object}
 */
proto.com.echo.Message.toObject = function(includeInstance, msg) {
  var f, obj = {
    msgType: msg.getMsgType(),
    request: (f = msg.getRequest()) && proto.com.echo.Request.toObject(includeInstance, f),
    response: (f = msg.getResponse()) && proto.com.echo.Response.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.echo.Message}
 */
proto.com.echo.Message.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.echo.Message;
  return proto.com.echo.Message.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.echo.Message} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.echo.Message}
 */
proto.com.echo.Message.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.echo.MsgType} */ (reader.readEnum());
      msg.setMsgType(value);
      break;
    case 1001:
      var value = new proto.com.echo.Request;
      reader.readMessage(value,proto.com.echo.Request.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 1002:
      var value = new proto.com.echo.Response;
      reader.readMessage(value,proto.com.echo.Response.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.com.echo.Message} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Message.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.echo.Message.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.com.echo.Message.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getMsgType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = this.getRequest();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.com.echo.Request.serializeBinaryToWriter
    );
  }
  f = this.getResponse();
  if (f != null) {
    writer.writeMessage(
      1002,
      f,
      proto.com.echo.Response.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.com.echo.Message} The clone.
 */
proto.com.echo.Message.prototype.cloneMessage = function() {
  return /** @type {!proto.com.echo.Message} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional MsgType msg_type = 1;
 * @return {!proto.com.echo.MsgType}
 */
proto.com.echo.Message.prototype.getMsgType = function() {
  return /** @type {!proto.com.echo.MsgType} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {!proto.com.echo.MsgType} value  */
proto.com.echo.Message.prototype.setMsgType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional Request request = 1001;
 * @return {proto.com.echo.Request}
 */
proto.com.echo.Message.prototype.getRequest = function() {
  return /** @type{proto.com.echo.Request} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Request, 1001));
};


/** @param {proto.com.echo.Request|undefined} value  */
proto.com.echo.Message.prototype.setRequest = function(value) {
  jspb.Message.setOneofWrapperField(this, 1001, proto.com.echo.Message.oneofGroups_[0], value);
};


proto.com.echo.Message.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * optional Response response = 1002;
 * @return {proto.com.echo.Response}
 */
proto.com.echo.Message.prototype.getResponse = function() {
  return /** @type{proto.com.echo.Response} */ (
    jspb.Message.getWrapperField(this, proto.com.echo.Response, 1002));
};


/** @param {proto.com.echo.Response|undefined} value  */
proto.com.echo.Message.prototype.setResponse = function(value) {
  jspb.Message.setOneofWrapperField(this, 1002, proto.com.echo.Message.oneofGroups_[0], value);
};


proto.com.echo.Message.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * @enum {number}
 */
proto.com.echo.MsgType = {
  MSG_TYPE_EMPTY: 0,
  SIGNUP_REQUEST: 1,
  LOGIN_REQUEST: 2,
  AUTHENTICATION_REQUEST: 3,
  SIGNUP_RESPONSE: 65536,
  LOGIN_RESPONSE: 65537,
  AUTHENTICATION_RESPONSE: 65538
};

/**
 * @enum {number}
 */
proto.com.echo.LoginType = {
  LOGIN_TYPE_EMPTY: 0,
  LOGIN_BY_PHONENUM: 1,
  LOGIN_BY_EMAIL: 2,
  LOGIN_BY_WECHAT: 3,
  LOGIN_BY_WEIBO: 4
};

/**
 * @enum {number}
 */
proto.com.echo.AuthType = {
  AUTH_TYPE_EMPTY: 0,
  LOCAL: 1,
  WECHAT: 2,
  WEIBO: 3
};

/**
 * @enum {number}
 */
proto.com.echo.ResultCode = {
  SUCCESS: 0,
  INTERNAL_SERVER_ERROR: 10000,
  REQUEST_RESOURCE_NOT_FOUND: 10001,
  METHOD_NOT_ALLOW: 10002,
  MESSAGE_TYPE_ERROR: 10003,
  INVALID_MESSAGE: 10004,
  INVALID_PHONENUM: 20001,
  INVALID_EMAIL: 20002,
  PHONENUM_ALREADY_EXISTED: 20005,
  EMAIL_ALREADY_EXISTED: 20006,
  INVALID_PASSWORD: 20011,
  INVALID_SESSION_TOKEN: 30001,
  SESSION_TOKEN_EXPIRED: 30002,
  INVALID_FROM_TOKEN: 40001,
  EXPIRED_FROM_TOKEN: 40002,
  ILLEGAL_ARGUMENT: 50001
};

goog.object.extend(exports, proto.com.echo);
